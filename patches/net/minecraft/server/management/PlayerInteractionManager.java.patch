--- ../src-base/minecraft/net/minecraft/server/management/PlayerInteractionManager.java
+++ ../src-work/minecraft/net/minecraft/server/management/PlayerInteractionManager.java
@@ -1,15 +1,16 @@
 package net.minecraft.server.management;
 
 import javax.annotation.Nullable;
-import net.minecraft.block.Block;
-import net.minecraft.block.BlockChest;
-import net.minecraft.block.BlockCommandBlock;
-import net.minecraft.block.BlockStructure;
+
+import net.minecraft.block.*;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.EntityPlayerMP;
+import net.minecraft.init.Blocks;
+import net.minecraft.inventory.ContainerPlayer;
 import net.minecraft.inventory.IInventory;
+import net.minecraft.item.Item;
 import net.minecraft.item.ItemBlock;
 import net.minecraft.item.ItemStack;
 import net.minecraft.item.ItemSword;
@@ -26,6 +27,19 @@
 import net.minecraft.world.ILockableContainer;
 import net.minecraft.world.World;
 import net.minecraft.world.WorldServer;
+//CraftBukkit start
+import net.minecraftforge.event.ForgeEventFactory;
+import net.minecraftforge.fml.common.FMLCommonHandler;
+import org.bukkit.craftbukkit.inventory.CraftInventory;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+import org.bukkit.event.block.BlockBreakEvent;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.Event;
+import org.bukkit.event.block.Action;
+import org.bukkit.event.inventory.InventoryType;
+import org.bukkit.event.player.PlayerInteractEvent;
+import ru.svarka.Svarka;
+// CraftBukkit end
 
 public class PlayerInteractionManager
 {
@@ -42,6 +56,10 @@
     private BlockPos delayedDestroyPos = BlockPos.ORIGIN;
     private int initialBlockDamage;
     private int durabilityRemainingOnBlock = -1;
+    // CraftBukkit start
+    public boolean interactResult = false;
+    public boolean firedInteract = false;
+    // CraftBukkit end
 
     public PlayerInteractionManager(World worldIn)
     {
@@ -143,10 +161,13 @@
     public void onBlockClicked(BlockPos pos, EnumFacing side)
     {
         net.minecraftforge.event.entity.player.PlayerInteractEvent.LeftClickBlock event = net.minecraftforge.common.ForgeHooks.onLeftClickBlock(thisPlayerMP, pos, side, net.minecraftforge.common.ForgeHooks.rayTraceEyeHitVec(thisPlayerMP, getBlockReachDistance() + 1));
-        if (event.isCanceled())
+        PlayerInteractEvent eventCB = CraftEventFactory.callPlayerInteractEvent(this.thisPlayerMP, Action.LEFT_CLICK_BLOCK, pos, side, this.thisPlayerMP.inventory.getCurrentItem(), EnumHand.MAIN_HAND);
+        if (eventCB.isCancelled() || event.isCanceled()) // Svarka
         {
             // Restore block and te data
             thisPlayerMP.connection.sendPacket(new SPacketBlockChange(theWorld, pos));
+            TileEntity tileEntity = this.theWorld.getTileEntity(pos);
+            if(tileEntity != null) thisPlayerMP.connection.sendPacket(tileEntity.getUpdatePacket());
             theWorld.notifyBlockUpdate(pos, theWorld.getBlockState(pos), theWorld.getBlockState(pos), 3);
             return;
         }
@@ -191,7 +212,7 @@
 
             if (!iblockstate.getBlock().isAir(iblockstate, theWorld, pos))
             {
-                if (event.getUseBlock() != net.minecraftforge.fml.common.eventhandler.Event.Result.DENY)
+                if ( eventCB.useItemInHand() == Event.Result.DENY || event.getUseBlock() != net.minecraftforge.fml.common.eventhandler.Event.Result.DENY )
                 {
                     block.onBlockClicked(this.theWorld, pos, this.thisPlayerMP);
                     this.theWorld.extinguishFire((EntityPlayer)null, pos, side);
@@ -204,7 +225,7 @@
                 }
                 f = iblockstate.getPlayerRelativeBlockHardness(this.thisPlayerMP, this.thisPlayerMP.worldObj, pos);
             }
-            if (event.getUseItem() == net.minecraftforge.fml.common.eventhandler.Event.Result.DENY)
+            if (eventCB.useItemInHand() == Event.Result.DENY || event.getUseItem() == net.minecraftforge.fml.common.eventhandler.Event.Result.DENY)
             {
                 if (f >= 1.0F)
                 {
@@ -213,7 +234,16 @@
                     theWorld.notifyBlockUpdate(pos, theWorld.getBlockState(pos), theWorld.getBlockState(pos), 3);
                 }
                 return;
+            }// CB
+            org.bukkit.event.block.BlockDamageEvent blockEvent = CraftEventFactory.callBlockDamageEvent(this.thisPlayerMP, pos.getX(), pos.getY(), pos.getZ(), this.thisPlayerMP.inventory.getCurrentItem(), f >= 1.0f);
+            if(blockEvent.isCancelled()) {
+            	// Let the client know the block still exists
+            	((EntityPlayerMP) this.thisPlayerMP).connection.sendPacket(new SPacketBlockChange(this.theWorld, pos));
+            	return;
             }
+            if(blockEvent.getInstaBreak()) {
+            	f = 2.0F;
+            }// CB end
 
             if (!iblockstate.getBlock().isAir(iblockstate, theWorld, pos) && f >= 1.0F)
             {
@@ -255,6 +285,10 @@
                     this.initialBlockDamage = this.initialDamage;
                 }
             }
+        } // CraftBukkit start - Force block reset to client
+        else {
+            this.thisPlayerMP.connection.sendPacket(new SPacketBlockChange(this.theWorld, pos));
+            // CraftBukkit end
         }
     }
 
@@ -283,7 +317,51 @@
     }
 
     public boolean tryHarvestBlock(BlockPos pos)
-    {
+    {// CB
+    	BlockBreakEvent event = null;
+    	org.bukkit.block.Block blockCB = this.theWorld.getWorld().getBlockAt(pos.getX(), pos.getY(), pos.getZ());
+    	boolean isSwordNoBreak = this.isCreative() && this.thisPlayerMP.getActiveItemStack() != null && this.thisPlayerMP.getActiveItemStack().getItem() instanceof ItemSword;
+    	// Tell client the block is gone immediately then process events
+    	// Don't tell the client if its a creative sword break because its not broken!
+    	if (theWorld.getTileEntity(pos) == null && !isSwordNoBreak) {
+    		SPacketBlockChange packet = new SPacketBlockChange(this.theWorld, pos);
+    		packet.blockState = Blocks.AIR.getDefaultState();
+    		((EntityPlayerMP) this.thisPlayerMP).connection.sendPacket(packet);
+    	}
+    	event = new BlockBreakEvent(blockCB, this.thisPlayerMP.getBukkitEntity());
+        Svarka.debug("Func tryHarvestBlock: " + thisPlayerMP.getBukkitEntity().toString() + " Event: " + event.getPlayer());
+    	// Sword + Creative mode pre-cancel
+    	event.setCancelled(isSwordNoBreak);
+    	// Calculate default block experience
+    	IBlockState nmsData = this.theWorld.getBlockState(pos);
+    	Block nmsBlock = nmsData.getBlock();
+    	ItemStack itemstack = this.thisPlayerMP.getHeldItem(EnumHand.MAIN_HAND);
+    	/*if (nmsBlock != null && !event.isCancelled() && !this.isCreative() && this.player.hasBlock(nmsBlock.getBlockData())) {
+    		// Copied from block.a(World world, EntityHuman entityhuman, BlockPosition blockposition, IBlockData iblockdata, TileEntity tileentity)
+    		// PAIL: checkme each update
+    		if (!(nmsBlock.p() && EnchantmentManager.getEnchantmentLevel(Enchantments.SILK_TOUCH, itemstack) > 0)) {
+    			int data = block.getData();
+    			int bonusLevel = EnchantmentManager.getEnchantmentLevel(Enchantments.LOOT_BONUS_BLOCKS, itemstack);
+    			
+    			event.setExpToDrop(nmsBlock.getExpDrop(nmsData, this.theWorld, pos, bonusLevel));
+    		}
+    	}*/ // TODO
+        this.theWorld.getServer().getPluginManager().callEvent(event);
+        if (event.isCancelled()) {
+            if (isSwordNoBreak) {
+                return false;
+            }
+            // Let the client know the block still exists
+            ((EntityPlayerMP) this.thisPlayerMP).connection.sendPacket(new SPacketBlockChange(this.theWorld, pos));
+            // Update any tile entity data for this block
+            TileEntity tileentity = this.theWorld.getTileEntity(pos);
+            if (tileentity != null) {
+                this.thisPlayerMP.connection.sendPacket(tileentity.getUpdatePacket());
+            }
+            return false;
+        }
+
+        // Forge
         int exp = net.minecraftforge.common.ForgeHooks.onBlockBreakEvent(theWorld, gameType, thisPlayerMP, pos);
         if (exp == -1)
         {
@@ -338,15 +416,16 @@
                 }
 
                 // Drop experience
-                if (!this.isCreative() && flag1 && exp > 0)
+                if (!this.isCreative() && flag1)
                 {
-                    iblockstate.getBlock().dropXpOnBlockBreak(theWorld, pos, exp);
+                    iblockstate.getBlock().dropXpOnBlockBreak(theWorld, pos, exp > 0 ? exp : event.getExpToDrop() > 0 ? event.getExpToDrop() : 0); // Svarka
                 }
                 return flag1;
             }
         }
     }
 
+
     public EnumActionResult processRightClick(EntityPlayer player, World worldIn, ItemStack stack, EnumHand hand)
     {
         if (this.gameType == GameType.SPECTATOR)
@@ -385,8 +464,8 @@
 
                 if (itemstack.stackSize == 0)
                 {
-                    player.setHeldItem(hand, (ItemStack)null);
                     net.minecraftforge.event.ForgeEventFactory.onPlayerDestroyItem(player, itemstack, hand);
+                    player.setHeldItem(hand, (ItemStack)null);
                 }
 
                 if (!player.isHandActive())
@@ -401,34 +480,127 @@
 
     public EnumActionResult processRightClickBlock(EntityPlayer player, World worldIn, @Nullable ItemStack stack, EnumHand hand, BlockPos pos, EnumFacing facing, float hitX, float hitY, float hitZ)
     {
-        if (this.gameType == GameType.SPECTATOR)
-        {
-            TileEntity tileentity = worldIn.getTileEntity(pos);
+        IBlockState blockState = worldIn.getBlockState(pos);
+        boolean isAir = blockState.getBlock().isAir(worldIn.getBlockState(pos),worldIn,pos);
+        boolean denyItem = false;
+        boolean denyBlock = false;
+        EnumActionResult result = EnumActionResult.FAIL;
+        if(!isAir){
+            boolean cancelledBlock = false;
+            if (this.gameType == GameType.SPECTATOR) {
+                TileEntity tileentity = worldIn.getTileEntity(pos);
+                cancelledBlock = !(tileentity instanceof ILockableContainer || tileentity instanceof IInventory);
+            }
 
-            if (tileentity instanceof ILockableContainer)
+            if (!player.getBukkitEntity().isOp() && stack != null && Block.getBlockFromItem(stack.getItem()) instanceof BlockCommandBlock) {
+                cancelledBlock = true;
+            }
+            net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock eventForge = net.minecraftforge.common.ForgeHooks
+                    .onRightClickBlock(player, hand, stack, pos, facing, net.minecraftforge.common.ForgeHooks.rayTraceEyeHitVec(thisPlayerMP, getBlockReachDistance() + 1));
+            if (eventForge.isCanceled()) return EnumActionResult.PASS;
+            PlayerInteractEvent event = CraftEventFactory.callPlayerInteractEvent(player, Action.RIGHT_CLICK_BLOCK, pos, facing, stack, cancelledBlock, hand);
+            firedInteract = true;
+            interactResult = event.useItemInHand() == Event.Result.DENY;
+            denyItem = event.useItemInHand() == org.bukkit.event.Event.Result.DENY || eventForge.getUseItem() == net.minecraftforge.fml.common.eventhandler.Event.Result.DENY;
+            denyBlock = event.useInteractedBlock() == org.bukkit.event.Event.Result.DENY || eventForge.getUseBlock() == net.minecraftforge.fml.common.eventhandler.Event.Result.DENY;
+            if(!denyItem || !denyBlock){
+                result = EnumActionResult.PASS;
+            } else result = EnumActionResult.SUCCESS;
+            // if we have no explicit deny, check if item can be used
+            if (!denyItem)
             {
-                Block block1 = worldIn.getBlockState(pos).getBlock();
-                ILockableContainer ilockablecontainer = (ILockableContainer)tileentity;
+                Item item = (stack != null ? stack.getItem() : null);
+                // try to use an item in hand before activating a block. Used for items such as IC2's wrench.
+                if (item != null && item.onItemUseFirst(stack, player, worldIn, pos, facing, hitX, hitY, hitZ, hand) == EnumActionResult.SUCCESS) {
+                    if (stack.stackSize <= 0) ForgeEventFactory.onPlayerDestroyItem(thisPlayerMP, stack, hand);
+                    return EnumActionResult.SUCCESS;
+                }
+            }
+            if(event.useInteractedBlock() == Event.Result.DENY){
+                // If we denied a door from opening, we need to send a correcting update to the client, as it already opened the door.
+                if (blockState.getBlock() instanceof BlockDoor) {
+                    boolean bottom = blockState.getValue(BlockDoor.HALF) == BlockDoor.EnumDoorHalf.LOWER;
+                    ((EntityPlayerMP) player).connection.sendPacket(new SPacketBlockChange(worldIn, bottom ? pos.up() : pos.down()));
+                } else if (blockState.getBlock() instanceof BlockCake) {
+                    ((EntityPlayerMP) player).getBukkitEntity().sendHealthUpdate(); // SPIGOT-1341 - reset health for cake
+                }
+                result = (event.useItemInHand() != Event.Result.ALLOW) ? EnumActionResult.SUCCESS : EnumActionResult.PASS;
+            }else if (this.gameType == gameType.SPECTATOR) {
+                TileEntity tileentity = worldIn.getTileEntity(pos);
 
-                if (ilockablecontainer instanceof TileEntityChest && block1 instanceof BlockChest)
-                {
-                    ilockablecontainer = ((BlockChest)block1).getLockableContainer(worldIn, pos);
+                if (tileentity instanceof ILockableContainer) {
+                    Block block = worldIn.getBlockState(pos).getBlock();
+                    ILockableContainer itileinventory = (ILockableContainer) tileentity;
+
+                    if (itileinventory instanceof TileEntityChest && block instanceof BlockChest) {
+                        itileinventory = ((BlockChest) block).getLockableContainer(worldIn, pos); // PAIL: rename
+                    }
+
+                    if (itileinventory != null) {
+                        player.displayGUIChest(itileinventory);
+                        return EnumActionResult.SUCCESS;
+                    }
+                } else if (tileentity instanceof IInventory) {
+                    player.displayGUIChest((IInventory) tileentity);
+                    return EnumActionResult.SUCCESS;
                 }
 
-                if (ilockablecontainer != null)
+                return EnumActionResult.PASS;
+            }else if (!player.isSneaking() || player.getHeldItemMainhand() == null && player.getHeldItemOffhand() == null) {
+                result = (blockState.getBlock().onBlockActivated(worldIn, pos, blockState, player, hand, stack, facing, hitX, hitY, hitZ) ? EnumActionResult.SUCCESS : EnumActionResult.PASS);
+                // Svarka start - if bukkitView is null, create one. Required for Ender Chests since they do not use NetworkRegistry.openRemoteGUI
+                if (thisPlayerMP != null && !(thisPlayerMP.openContainer instanceof ContainerPlayer))
                 {
-                    player.displayGUIChest(ilockablecontainer);
-                    return EnumActionResult.SUCCESS;
+                    if (thisPlayerMP.openContainer.getBukkitView() == null)
+                    {
+                        TileEntity te = thisPlayerMP.worldObj.getTileEntity(pos);
+                        if (te != null && te instanceof IInventory)
+                        {
+                            IInventory teInv = (IInventory)te;
+                            CraftInventory inventory = new CraftInventory(teInv);
+                            thisPlayerMP.openContainer.bukkitView = new CraftInventoryView(thisPlayerMP.getBukkitEntity(), inventory, thisPlayerMP.openContainer);
+                        }
+                        else
+                        {
+                            thisPlayerMP.openContainer.bukkitView = new CraftInventoryView(thisPlayerMP.getBukkitEntity(), FMLCommonHandler.instance().getMinecraftServerInstance().getServer().server.createInventory(thisPlayerMP.getBukkitEntity(), InventoryType.CHEST), thisPlayerMP.openContainer);
+                        }
+
+                        thisPlayerMP.openContainer = CraftEventFactory.callInventoryOpenEvent(thisPlayerMP, thisPlayerMP.openContainer, false);
+                        if (thisPlayerMP.openContainer == null)
+                        {
+                            thisPlayerMP.openContainer = thisPlayerMP.inventoryContainer;
+                            return EnumActionResult.PASS;
+                        }
+                    }
                 }
+                // Svarka end
             }
-            else if (tileentity instanceof IInventory)
+            if (stack != null && result != EnumActionResult.SUCCESS && !interactResult) { // add !interactResult SPIGOT-764
+                int j1 = stack.getMetadata();
+                int k1 = stack.stackSize;
+
+                result = stack.onItemUse(player, worldIn, pos, hand, facing, hitX, hitY, hitZ);
+
+                // The item count should not decrement in Creative mode.
+                if (this.isCreative()) {
+                    stack.setItemDamage(j1);
+                    stack.stackSize = k1;
+                }
+            }/*else if(stack != null && result == EnumActionResult.SUCCESS) // Thermos call the Forge item destruction event...
             {
-                player.displayGUIChest((IInventory)tileentity);
-                return EnumActionResult.SUCCESS;
+                if (stack.stackSize <= 0)
+                {
+                    ForgeEventFactory.onPlayerDestroyItem(this.thisPlayerMP, stack,hand);
+                }
+            }*/
+            // If we have 'true' and no explicit deny *or* an explicit allow -- run the item part of the hook
+            if (stack != null && ((result == EnumActionResult.SUCCESS && event.useItemInHand() != org.bukkit.event.Event.Result.DENY) || event.useItemInHand() == org.bukkit.event.Event.Result.ALLOW))
+            {
+                this.processRightClick(player, worldIn, stack,hand);
             }
-
-            return EnumActionResult.PASS;
         }
+        return result;
+/*
         else
         {
             net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock event = net.minecraftforge.common.ForgeHooks
@@ -494,7 +666,7 @@
                     else return result;
                 }
             }
-        }
+        }*/
     }
 
     public void setWorld(WorldServer serverWorld)
